syntax = "proto3";

package pgde.format;

option go_package = "github.com/empirefox/protoc-gen-dart-ext/pkg/pgde/format;format";

import "google/protobuf/descriptor.proto";
import "pgde/format/currency.proto";
import "pgde/units/units.proto";

extend google.protobuf.FieldOptions { pgde.format.Format to = 919111; }

message Format {
  oneof type {
    TimeFormat time = 1;
    CurrencyFormat currency = 2;
    NumberFormat number = 3;
    BytesFormat bytes = 4;
  }
}

message TimeFormat {
  // Support field: `Datetime`, `Duration`, `[s,fixed]int64`(will mark it as
  // time) or other `int` types. `int` values must be from utc.
  //
  // - `*Datetime[24H]` must set on `Datetime` or `int64` type.
  // - `ofDay[24H]` must set on `Datetime` or `uint` types.
  // - `duration` must set on `Duration` or any `int` types.
  enum Builtin {
    // Formats the date using a medium-width format.
    //  Examples:
    // - US English: Wed, Sep 27
    // - Russian: ср, сент. 27
    mediumDate = 0;

    // Formats day of week, month, day of month and year in a long-width format.
    // Examples:
    // - US English: Wednesday, September 27, 2017
    // - Russian: Среда, Сентябрь 27, 2017
    fullDate = 1;

    // 3:00pm or 15:00pm
    // default parse the int value as minute
    ofDay = 2;

    // 15:00pm
    ofDay24H = 3;

    mediumDatetime = 4;
    mediumDatetime24H = 5;
    fullDatetime = 6;
    fullDatetime24H = 7;

    duration = 8;
  }

  enum IntUnit {
    // invalid if field is of an int type
    und = 0;

    // Dart lost the nano part, eg. 1,100 becomes 1,000.
    nanosecond = 1;
    microsecond = 2;
    millisecond = 3;
    second = 4;
    minute = 5;
    hour = 6;
  }

  Builtin type = 1;

  // only valid on int types, and must set if type is int
  IntUnit intUnit = 2;
}

message CurrencyFormat {
  oneof type {
    Currency code = 1;
    Currency symbol = 2;
    Currency name = 3;
  }

  // only valid for int currency
  // move decimal point left when showing
  // move decimal point right back when saving
  // need promise the visible fractional digits when showing
  // showing: 1 cent => 0.01 dolar
  // saving: 0.01 dolar => 1 cent
  bool centMode = 4;
}

message NumberFormat {
  enum Builtin {
    decimal = 0;
    percent = 1;
    scientific = 2;
    currency = 3;
    currencySimple = 4;
  }

  Builtin type = 1;

  string locale = 2;
  bool ordinal = 3;
  pgde.units.Unit unit = 4;
}

message BytesFormat {
  enum Builtin {
    ip = 0;
    ipv4 = 1;
    ipv6 = 2;

    ipPort = 3;
    ipv4Port = 4;
    ipv6Port = 5;

    cidr = 6;
    cidrv4 = 7;
    cidrv6 = 8;
  }

  Builtin type = 1;
}