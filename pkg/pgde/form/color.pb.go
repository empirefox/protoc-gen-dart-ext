// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: pgde/form/color.proto

package form

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type NonColor_Color int32

const (
	NonColor_transparent NonColor_Color = 0
	NonColor_black       NonColor_Color = 1
	NonColor_black87     NonColor_Color = 2
	NonColor_black54     NonColor_Color = 3
	NonColor_black45     NonColor_Color = 4
	NonColor_black38     NonColor_Color = 5
	NonColor_black26     NonColor_Color = 6
	NonColor_black12     NonColor_Color = 7
	NonColor_white       NonColor_Color = 8
	NonColor_white70     NonColor_Color = 9
	NonColor_white30     NonColor_Color = 10
	NonColor_white12     NonColor_Color = 11
	NonColor_white10     NonColor_Color = 12
)

// Enum value maps for NonColor_Color.
var (
	NonColor_Color_name = map[int32]string{
		0:  "transparent",
		1:  "black",
		2:  "black87",
		3:  "black54",
		4:  "black45",
		5:  "black38",
		6:  "black26",
		7:  "black12",
		8:  "white",
		9:  "white70",
		10: "white30",
		11: "white12",
		12: "white10",
	}
	NonColor_Color_value = map[string]int32{
		"transparent": 0,
		"black":       1,
		"black87":     2,
		"black54":     3,
		"black45":     4,
		"black38":     5,
		"black26":     6,
		"black12":     7,
		"white":       8,
		"white70":     9,
		"white30":     10,
		"white12":     11,
		"white10":     12,
	}
)

func (x NonColor_Color) Enum() *NonColor_Color {
	p := new(NonColor_Color)
	*p = x
	return p
}

func (x NonColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NonColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_form_color_proto_enumTypes[0].Descriptor()
}

func (NonColor_Color) Type() protoreflect.EnumType {
	return &file_pgde_form_color_proto_enumTypes[0]
}

func (x NonColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NonColor_Color.Descriptor instead.
func (NonColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{1, 0}
}

type PrimaryColor_Color int32

const (
	PrimaryColor_red        PrimaryColor_Color = 0
	PrimaryColor_pink       PrimaryColor_Color = 1
	PrimaryColor_purple     PrimaryColor_Color = 2
	PrimaryColor_deepPurple PrimaryColor_Color = 3
	PrimaryColor_indigo     PrimaryColor_Color = 4
	PrimaryColor_blue       PrimaryColor_Color = 5
	PrimaryColor_lightBlue  PrimaryColor_Color = 6
	PrimaryColor_cyan       PrimaryColor_Color = 7
	PrimaryColor_teal       PrimaryColor_Color = 8
	PrimaryColor_green      PrimaryColor_Color = 9
	PrimaryColor_lightGreen PrimaryColor_Color = 10
	PrimaryColor_lime       PrimaryColor_Color = 11
	PrimaryColor_yellow     PrimaryColor_Color = 12
	PrimaryColor_amber      PrimaryColor_Color = 13
	PrimaryColor_orange     PrimaryColor_Color = 14
	PrimaryColor_deepOrange PrimaryColor_Color = 15
	PrimaryColor_brown      PrimaryColor_Color = 16
	PrimaryColor_grey       PrimaryColor_Color = 17
	PrimaryColor_blueGrey   PrimaryColor_Color = 18
)

// Enum value maps for PrimaryColor_Color.
var (
	PrimaryColor_Color_name = map[int32]string{
		0:  "red",
		1:  "pink",
		2:  "purple",
		3:  "deepPurple",
		4:  "indigo",
		5:  "blue",
		6:  "lightBlue",
		7:  "cyan",
		8:  "teal",
		9:  "green",
		10: "lightGreen",
		11: "lime",
		12: "yellow",
		13: "amber",
		14: "orange",
		15: "deepOrange",
		16: "brown",
		17: "grey",
		18: "blueGrey",
	}
	PrimaryColor_Color_value = map[string]int32{
		"red":        0,
		"pink":       1,
		"purple":     2,
		"deepPurple": 3,
		"indigo":     4,
		"blue":       5,
		"lightBlue":  6,
		"cyan":       7,
		"teal":       8,
		"green":      9,
		"lightGreen": 10,
		"lime":       11,
		"yellow":     12,
		"amber":      13,
		"orange":     14,
		"deepOrange": 15,
		"brown":      16,
		"grey":       17,
		"blueGrey":   18,
	}
)

func (x PrimaryColor_Color) Enum() *PrimaryColor_Color {
	p := new(PrimaryColor_Color)
	*p = x
	return p
}

func (x PrimaryColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimaryColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_form_color_proto_enumTypes[1].Descriptor()
}

func (PrimaryColor_Color) Type() protoreflect.EnumType {
	return &file_pgde_form_color_proto_enumTypes[1]
}

func (x PrimaryColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimaryColor_Color.Descriptor instead.
func (PrimaryColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{2, 0}
}

type PrimaryColor_Shade int32

const (
	PrimaryColor_s50  PrimaryColor_Shade = 0
	PrimaryColor_s100 PrimaryColor_Shade = 1
	PrimaryColor_s200 PrimaryColor_Shade = 2
	PrimaryColor_s300 PrimaryColor_Shade = 3
	PrimaryColor_s400 PrimaryColor_Shade = 4
	PrimaryColor_s500 PrimaryColor_Shade = 5
	PrimaryColor_s600 PrimaryColor_Shade = 6
	PrimaryColor_s700 PrimaryColor_Shade = 7
	PrimaryColor_s800 PrimaryColor_Shade = 8
	PrimaryColor_s900 PrimaryColor_Shade = 9
)

// Enum value maps for PrimaryColor_Shade.
var (
	PrimaryColor_Shade_name = map[int32]string{
		0: "s50",
		1: "s100",
		2: "s200",
		3: "s300",
		4: "s400",
		5: "s500",
		6: "s600",
		7: "s700",
		8: "s800",
		9: "s900",
	}
	PrimaryColor_Shade_value = map[string]int32{
		"s50":  0,
		"s100": 1,
		"s200": 2,
		"s300": 3,
		"s400": 4,
		"s500": 5,
		"s600": 6,
		"s700": 7,
		"s800": 8,
		"s900": 9,
	}
)

func (x PrimaryColor_Shade) Enum() *PrimaryColor_Shade {
	p := new(PrimaryColor_Shade)
	*p = x
	return p
}

func (x PrimaryColor_Shade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrimaryColor_Shade) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_form_color_proto_enumTypes[2].Descriptor()
}

func (PrimaryColor_Shade) Type() protoreflect.EnumType {
	return &file_pgde_form_color_proto_enumTypes[2]
}

func (x PrimaryColor_Shade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrimaryColor_Shade.Descriptor instead.
func (PrimaryColor_Shade) EnumDescriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{2, 1}
}

type AccentColor_Color int32

const (
	AccentColor_red        AccentColor_Color = 0
	AccentColor_pink       AccentColor_Color = 1
	AccentColor_purple     AccentColor_Color = 2
	AccentColor_deepPurple AccentColor_Color = 3
	AccentColor_indigo     AccentColor_Color = 4
	AccentColor_blue       AccentColor_Color = 5
	AccentColor_lightBlue  AccentColor_Color = 6
	AccentColor_cyan       AccentColor_Color = 7
	AccentColor_teal       AccentColor_Color = 8
	AccentColor_green      AccentColor_Color = 9
	AccentColor_lightGreen AccentColor_Color = 10
	AccentColor_lime       AccentColor_Color = 11
	AccentColor_yellow     AccentColor_Color = 12
	AccentColor_amber      AccentColor_Color = 13
	AccentColor_orange     AccentColor_Color = 14
	AccentColor_deepOrange AccentColor_Color = 15
)

// Enum value maps for AccentColor_Color.
var (
	AccentColor_Color_name = map[int32]string{
		0:  "red",
		1:  "pink",
		2:  "purple",
		3:  "deepPurple",
		4:  "indigo",
		5:  "blue",
		6:  "lightBlue",
		7:  "cyan",
		8:  "teal",
		9:  "green",
		10: "lightGreen",
		11: "lime",
		12: "yellow",
		13: "amber",
		14: "orange",
		15: "deepOrange",
	}
	AccentColor_Color_value = map[string]int32{
		"red":        0,
		"pink":       1,
		"purple":     2,
		"deepPurple": 3,
		"indigo":     4,
		"blue":       5,
		"lightBlue":  6,
		"cyan":       7,
		"teal":       8,
		"green":      9,
		"lightGreen": 10,
		"lime":       11,
		"yellow":     12,
		"amber":      13,
		"orange":     14,
		"deepOrange": 15,
	}
)

func (x AccentColor_Color) Enum() *AccentColor_Color {
	p := new(AccentColor_Color)
	*p = x
	return p
}

func (x AccentColor_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccentColor_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_form_color_proto_enumTypes[3].Descriptor()
}

func (AccentColor_Color) Type() protoreflect.EnumType {
	return &file_pgde_form_color_proto_enumTypes[3]
}

func (x AccentColor_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccentColor_Color.Descriptor instead.
func (AccentColor_Color) EnumDescriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{3, 0}
}

type AccentColor_Shade int32

const (
	AccentColor_s50  AccentColor_Shade = 0
	AccentColor_s100 AccentColor_Shade = 1
	AccentColor_s200 AccentColor_Shade = 2
	AccentColor_s300 AccentColor_Shade = 3
	AccentColor_s400 AccentColor_Shade = 4
	AccentColor_s700 AccentColor_Shade = 5
)

// Enum value maps for AccentColor_Shade.
var (
	AccentColor_Shade_name = map[int32]string{
		0: "s50",
		1: "s100",
		2: "s200",
		3: "s300",
		4: "s400",
		5: "s700",
	}
	AccentColor_Shade_value = map[string]int32{
		"s50":  0,
		"s100": 1,
		"s200": 2,
		"s300": 3,
		"s400": 4,
		"s700": 5,
	}
)

func (x AccentColor_Shade) Enum() *AccentColor_Shade {
	p := new(AccentColor_Shade)
	*p = x
	return p
}

func (x AccentColor_Shade) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AccentColor_Shade) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_form_color_proto_enumTypes[4].Descriptor()
}

func (AccentColor_Shade) Type() protoreflect.EnumType {
	return &file_pgde_form_color_proto_enumTypes[4]
}

func (x AccentColor_Shade) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AccentColor_Shade.Descriptor instead.
func (AccentColor_Shade) EnumDescriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{3, 1}
}

type MaterialColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Color:
	//	*MaterialColor_Non
	//	*MaterialColor_Primary
	//	*MaterialColor_Accent
	Color isMaterialColor_Color `protobuf_oneof:"color"`
}

func (x *MaterialColor) Reset() {
	*x = MaterialColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pgde_form_color_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MaterialColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MaterialColor) ProtoMessage() {}

func (x *MaterialColor) ProtoReflect() protoreflect.Message {
	mi := &file_pgde_form_color_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MaterialColor.ProtoReflect.Descriptor instead.
func (*MaterialColor) Descriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{0}
}

func (m *MaterialColor) GetColor() isMaterialColor_Color {
	if m != nil {
		return m.Color
	}
	return nil
}

func (x *MaterialColor) GetNon() *NonColor {
	if x, ok := x.GetColor().(*MaterialColor_Non); ok {
		return x.Non
	}
	return nil
}

func (x *MaterialColor) GetPrimary() *PrimaryColor {
	if x, ok := x.GetColor().(*MaterialColor_Primary); ok {
		return x.Primary
	}
	return nil
}

func (x *MaterialColor) GetAccent() *AccentColor {
	if x, ok := x.GetColor().(*MaterialColor_Accent); ok {
		return x.Accent
	}
	return nil
}

type isMaterialColor_Color interface {
	isMaterialColor_Color()
}

type MaterialColor_Non struct {
	Non *NonColor `protobuf:"bytes,1,opt,name=non,proto3,oneof"`
}

type MaterialColor_Primary struct {
	Primary *PrimaryColor `protobuf:"bytes,2,opt,name=primary,proto3,oneof"`
}

type MaterialColor_Accent struct {
	Accent *AccentColor `protobuf:"bytes,3,opt,name=accent,proto3,oneof"`
}

func (*MaterialColor_Non) isMaterialColor_Color() {}

func (*MaterialColor_Primary) isMaterialColor_Color() {}

func (*MaterialColor_Accent) isMaterialColor_Color() {}

type NonColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color NonColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=pgde.form.NonColor_Color" json:"color,omitempty"`
}

func (x *NonColor) Reset() {
	*x = NonColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pgde_form_color_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NonColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NonColor) ProtoMessage() {}

func (x *NonColor) ProtoReflect() protoreflect.Message {
	mi := &file_pgde_form_color_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NonColor.ProtoReflect.Descriptor instead.
func (*NonColor) Descriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{1}
}

func (x *NonColor) GetColor() NonColor_Color {
	if x != nil {
		return x.Color
	}
	return NonColor_transparent
}

type PrimaryColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color PrimaryColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=pgde.form.PrimaryColor_Color" json:"color,omitempty"`
	Shade PrimaryColor_Shade `protobuf:"varint,2,opt,name=shade,proto3,enum=pgde.form.PrimaryColor_Shade" json:"shade,omitempty"`
}

func (x *PrimaryColor) Reset() {
	*x = PrimaryColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pgde_form_color_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrimaryColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrimaryColor) ProtoMessage() {}

func (x *PrimaryColor) ProtoReflect() protoreflect.Message {
	mi := &file_pgde_form_color_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrimaryColor.ProtoReflect.Descriptor instead.
func (*PrimaryColor) Descriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{2}
}

func (x *PrimaryColor) GetColor() PrimaryColor_Color {
	if x != nil {
		return x.Color
	}
	return PrimaryColor_red
}

func (x *PrimaryColor) GetShade() PrimaryColor_Shade {
	if x != nil {
		return x.Shade
	}
	return PrimaryColor_s50
}

type AccentColor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color AccentColor_Color `protobuf:"varint,1,opt,name=color,proto3,enum=pgde.form.AccentColor_Color" json:"color,omitempty"`
	Shade AccentColor_Shade `protobuf:"varint,2,opt,name=shade,proto3,enum=pgde.form.AccentColor_Shade" json:"shade,omitempty"`
}

func (x *AccentColor) Reset() {
	*x = AccentColor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pgde_form_color_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccentColor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccentColor) ProtoMessage() {}

func (x *AccentColor) ProtoReflect() protoreflect.Message {
	mi := &file_pgde_form_color_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccentColor.ProtoReflect.Descriptor instead.
func (*AccentColor) Descriptor() ([]byte, []int) {
	return file_pgde_form_color_proto_rawDescGZIP(), []int{3}
}

func (x *AccentColor) GetColor() AccentColor_Color {
	if x != nil {
		return x.Color
	}
	return AccentColor_red
}

func (x *AccentColor) GetShade() AccentColor_Shade {
	if x != nil {
		return x.Shade
	}
	return AccentColor_s50
}

var File_pgde_form_color_proto protoreflect.FileDescriptor

var file_pgde_form_color_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x67, 0x64, 0x65, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f,
	0x72, 0x6d, 0x22, 0xa8, 0x01, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x03, 0x6e, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4e, 0x6f,
	0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x03, 0x6e, 0x6f, 0x6e, 0x12, 0x33, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63,
	0x63, 0x65, 0x6e, 0x74, 0x42, 0x07, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xee, 0x01,
	0x0a, 0x08, 0x4e, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x70, 0x67, 0x64, 0x65,
	0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x4e, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xb0, 0x01, 0x0a, 0x05,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x10,
	0x01, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x38, 0x37, 0x10, 0x02, 0x12, 0x0b,
	0x0a, 0x07, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x35, 0x34, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x62,
	0x6c, 0x61, 0x63, 0x6b, 0x34, 0x35, 0x10, 0x04, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6c, 0x61, 0x63,
	0x6b, 0x33, 0x38, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x32, 0x36,
	0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07, 0x62, 0x6c, 0x61, 0x63, 0x6b, 0x31, 0x32, 0x10, 0x07, 0x12,
	0x09, 0x0a, 0x05, 0x77, 0x68, 0x69, 0x74, 0x65, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x68,
	0x69, 0x74, 0x65, 0x37, 0x30, 0x10, 0x09, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x68, 0x69, 0x74, 0x65,
	0x33, 0x30, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x68, 0x69, 0x74, 0x65, 0x31, 0x32, 0x10,
	0x0b, 0x12, 0x0b, 0x0a, 0x07, 0x77, 0x68, 0x69, 0x74, 0x65, 0x31, 0x30, 0x10, 0x0c, 0x22, 0xd1,
	0x03, 0x0a, 0x0c, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x33, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x05, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e,
	0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x53, 0x68, 0x61,
	0x64, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x64, 0x65, 0x22, 0xea, 0x01, 0x0a, 0x05, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04,
	0x70, 0x69, 0x6e, 0x6b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x70, 0x75, 0x72, 0x70, 0x6c, 0x65,
	0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x50, 0x75, 0x72, 0x70, 0x6c, 0x65,
	0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x79, 0x61, 0x6e, 0x10,
	0x07, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x67,
	0x72, 0x65, 0x65, 0x6e, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x47,
	0x72, 0x65, 0x65, 0x6e, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x6d, 0x65, 0x10, 0x0b,
	0x12, 0x0a, 0x0a, 0x06, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x0c, 0x12, 0x09, 0x0a, 0x05,
	0x61, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x6f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x4f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x62, 0x72, 0x6f, 0x77, 0x6e, 0x10, 0x10, 0x12, 0x08,
	0x0a, 0x04, 0x67, 0x72, 0x65, 0x79, 0x10, 0x11, 0x12, 0x0c, 0x0a, 0x08, 0x62, 0x6c, 0x75, 0x65,
	0x47, 0x72, 0x65, 0x79, 0x10, 0x12, 0x22, 0x6a, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12,
	0x07, 0x0a, 0x03, 0x73, 0x35, 0x30, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x31, 0x30, 0x30,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x32, 0x30, 0x30, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x73, 0x33, 0x30, 0x30, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x34, 0x30, 0x30, 0x10, 0x04,
	0x12, 0x08, 0x0a, 0x04, 0x73, 0x35, 0x30, 0x30, 0x10, 0x05, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x36,
	0x30, 0x30, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x37, 0x30, 0x30, 0x10, 0x07, 0x12, 0x08,
	0x0a, 0x04, 0x73, 0x38, 0x30, 0x30, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x39, 0x30, 0x30,
	0x10, 0x09, 0x22, 0x83, 0x03, 0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x70, 0x67, 0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72,
	0x6d, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x2e, 0x53, 0x68,
	0x61, 0x64, 0x65, 0x52, 0x05, 0x73, 0x68, 0x61, 0x64, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x05, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x07, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x70, 0x69, 0x6e, 0x6b, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x70, 0x75, 0x72, 0x70, 0x6c,
	0x65, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x50, 0x75, 0x72, 0x70, 0x6c,
	0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x69, 0x6e, 0x64, 0x69, 0x67, 0x6f, 0x10, 0x04, 0x12,
	0x08, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x6c, 0x69, 0x67,
	0x68, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x63, 0x79, 0x61, 0x6e,
	0x10, 0x07, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x61, 0x6c, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05,
	0x67, 0x72, 0x65, 0x65, 0x6e, 0x10, 0x09, 0x12, 0x0e, 0x0a, 0x0a, 0x6c, 0x69, 0x67, 0x68, 0x74,
	0x47, 0x72, 0x65, 0x65, 0x6e, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x6c, 0x69, 0x6d, 0x65, 0x10,
	0x0b, 0x12, 0x0a, 0x0a, 0x06, 0x79, 0x65, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x0c, 0x12, 0x09, 0x0a,
	0x05, 0x61, 0x6d, 0x62, 0x65, 0x72, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x6f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x10, 0x0e, 0x12, 0x0e, 0x0a, 0x0a, 0x64, 0x65, 0x65, 0x70, 0x4f, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x10, 0x0f, 0x22, 0x42, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x64, 0x65, 0x12, 0x07, 0x0a,
	0x03, 0x73, 0x35, 0x30, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x31, 0x30, 0x30, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x73, 0x32, 0x30, 0x30, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x33,
	0x30, 0x30, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x73, 0x34, 0x30, 0x30, 0x10, 0x04, 0x12, 0x08,
	0x0a, 0x04, 0x73, 0x37, 0x30, 0x30, 0x10, 0x05, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6d, 0x70, 0x69, 0x72, 0x65, 0x66, 0x6f, 0x78,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x64, 0x61, 0x72, 0x74,
	0x2d, 0x65, 0x78, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x67, 0x64, 0x65, 0x2f, 0x66, 0x6f,
	0x72, 0x6d, 0x3b, 0x66, 0x6f, 0x72, 0x6d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pgde_form_color_proto_rawDescOnce sync.Once
	file_pgde_form_color_proto_rawDescData = file_pgde_form_color_proto_rawDesc
)

func file_pgde_form_color_proto_rawDescGZIP() []byte {
	file_pgde_form_color_proto_rawDescOnce.Do(func() {
		file_pgde_form_color_proto_rawDescData = protoimpl.X.CompressGZIP(file_pgde_form_color_proto_rawDescData)
	})
	return file_pgde_form_color_proto_rawDescData
}

var file_pgde_form_color_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_pgde_form_color_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_pgde_form_color_proto_goTypes = []interface{}{
	(NonColor_Color)(0),     // 0: pgde.form.NonColor.Color
	(PrimaryColor_Color)(0), // 1: pgde.form.PrimaryColor.Color
	(PrimaryColor_Shade)(0), // 2: pgde.form.PrimaryColor.Shade
	(AccentColor_Color)(0),  // 3: pgde.form.AccentColor.Color
	(AccentColor_Shade)(0),  // 4: pgde.form.AccentColor.Shade
	(*MaterialColor)(nil),   // 5: pgde.form.MaterialColor
	(*NonColor)(nil),        // 6: pgde.form.NonColor
	(*PrimaryColor)(nil),    // 7: pgde.form.PrimaryColor
	(*AccentColor)(nil),     // 8: pgde.form.AccentColor
}
var file_pgde_form_color_proto_depIdxs = []int32{
	6, // 0: pgde.form.MaterialColor.non:type_name -> pgde.form.NonColor
	7, // 1: pgde.form.MaterialColor.primary:type_name -> pgde.form.PrimaryColor
	8, // 2: pgde.form.MaterialColor.accent:type_name -> pgde.form.AccentColor
	0, // 3: pgde.form.NonColor.color:type_name -> pgde.form.NonColor.Color
	1, // 4: pgde.form.PrimaryColor.color:type_name -> pgde.form.PrimaryColor.Color
	2, // 5: pgde.form.PrimaryColor.shade:type_name -> pgde.form.PrimaryColor.Shade
	3, // 6: pgde.form.AccentColor.color:type_name -> pgde.form.AccentColor.Color
	4, // 7: pgde.form.AccentColor.shade:type_name -> pgde.form.AccentColor.Shade
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_pgde_form_color_proto_init() }
func file_pgde_form_color_proto_init() {
	if File_pgde_form_color_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pgde_form_color_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MaterialColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pgde_form_color_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NonColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pgde_form_color_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrimaryColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pgde_form_color_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccentColor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pgde_form_color_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MaterialColor_Non)(nil),
		(*MaterialColor_Primary)(nil),
		(*MaterialColor_Accent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pgde_form_color_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pgde_form_color_proto_goTypes,
		DependencyIndexes: file_pgde_form_color_proto_depIdxs,
		EnumInfos:         file_pgde_form_color_proto_enumTypes,
		MessageInfos:      file_pgde_form_color_proto_msgTypes,
	}.Build()
	File_pgde_form_color_proto = out.File
	file_pgde_form_color_proto_rawDesc = nil
	file_pgde_form_color_proto_goTypes = nil
	file_pgde_form_color_proto_depIdxs = nil
}
