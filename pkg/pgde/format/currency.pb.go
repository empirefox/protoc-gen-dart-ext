// DO NOT EDIT. Generated by protoc-gen-dart-ext/tools.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.12.3
// source: pgde/format/currency.proto

package format

import (
	_ "github.com/empirefox/protoc-gen-dart-ext/pkg/pgde/zero"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// ISO 4217, publish date: 2018-08-29
type Currency int32

const (
	Currency_XXX Currency = 0
	Currency_ALL Currency = 8   // Lek
	Currency_DZD Currency = 12  // Algerian Dinar
	Currency_ARS Currency = 32  // Argentine Peso
	Currency_AUD Currency = 36  // Australian Dollar
	Currency_BSD Currency = 44  // Bahamian Dollar
	Currency_BHD Currency = 48  // Bahraini Dinar
	Currency_BDT Currency = 50  // Taka
	Currency_AMD Currency = 51  // Armenian Dram
	Currency_BBD Currency = 52  // Barbados Dollar
	Currency_BMD Currency = 60  // Bermudian Dollar
	Currency_BTN Currency = 64  // Ngultrum
	Currency_BOB Currency = 68  // Boliviano
	Currency_BWP Currency = 72  // Pula
	Currency_BZD Currency = 84  // Belize Dollar
	Currency_SBD Currency = 90  // Solomon Islands Dollar
	Currency_BND Currency = 96  // Brunei Dollar
	Currency_MMK Currency = 104 // Kyat
	Currency_BIF Currency = 108 // Burundi Franc
	Currency_KHR Currency = 116 // Riel
	Currency_CAD Currency = 124 // Canadian Dollar
	Currency_CVE Currency = 132 // Cabo Verde Escudo
	Currency_KYD Currency = 136 // Cayman Islands Dollar
	Currency_LKR Currency = 144 // Sri Lanka Rupee
	Currency_CLP Currency = 152 // Chilean Peso
	Currency_CNY Currency = 156 // Yuan Renminbi
	Currency_COP Currency = 170 // Colombian Peso
	Currency_KMF Currency = 174 // Comorian Franc
	Currency_CRC Currency = 188 // Costa Rican Colon
	Currency_HRK Currency = 191 // Kuna
	Currency_CUP Currency = 192 // Cuban Peso
	Currency_CZK Currency = 203 // Czech Koruna
	Currency_DKK Currency = 208 // Danish Krone
	Currency_DOP Currency = 214 // Dominican Peso
	Currency_SVC Currency = 222 // El Salvador Colon
	Currency_ETB Currency = 230 // Ethiopian Birr
	Currency_ERN Currency = 232 // Nakfa
	Currency_FKP Currency = 238 // Falkland Islands Pound
	Currency_FJD Currency = 242 // Fiji Dollar
	Currency_DJF Currency = 262 // Djibouti Franc
	Currency_GMD Currency = 270 // Dalasi
	Currency_GIP Currency = 292 // Gibraltar Pound
	Currency_GTQ Currency = 320 // Quetzal
	Currency_GNF Currency = 324 // Guinean Franc
	Currency_GYD Currency = 328 // Guyana Dollar
	Currency_HTG Currency = 332 // Gourde
	Currency_HNL Currency = 340 // Lempira
	Currency_HKD Currency = 344 // Hong Kong Dollar
	Currency_HUF Currency = 348 // Forint
	Currency_ISK Currency = 352 // Iceland Krona
	Currency_INR Currency = 356 // Indian Rupee
	Currency_IDR Currency = 360 // Rupiah
	Currency_IRR Currency = 364 // Iranian Rial
	Currency_IQD Currency = 368 // Iraqi Dinar
	Currency_ILS Currency = 376 // New Israeli Sheqel
	Currency_JMD Currency = 388 // Jamaican Dollar
	Currency_JPY Currency = 392 // Yen
	Currency_KZT Currency = 398 // Tenge
	Currency_JOD Currency = 400 // Jordanian Dinar
	Currency_KES Currency = 404 // Kenyan Shilling
	Currency_KPW Currency = 408 // North Korean Won
	Currency_KRW Currency = 410 // Won
	Currency_KWD Currency = 414 // Kuwaiti Dinar
	Currency_KGS Currency = 417 // Som
	Currency_LAK Currency = 418 // Lao Kip
	Currency_LBP Currency = 422 // Lebanese Pound
	Currency_LSL Currency = 426 // Loti
	Currency_LRD Currency = 430 // Liberian Dollar
	Currency_LYD Currency = 434 // Libyan Dinar
	Currency_MOP Currency = 446 // Pataca
	Currency_MWK Currency = 454 // Malawi Kwacha
	Currency_MYR Currency = 458 // Malaysian Ringgit
	Currency_MVR Currency = 462 // Rufiyaa
	Currency_MUR Currency = 480 // Mauritius Rupee
	Currency_MXN Currency = 484 // Mexican Peso
	Currency_MNT Currency = 496 // Tugrik
	Currency_MDL Currency = 498 // Moldovan Leu
	Currency_MAD Currency = 504 // Moroccan Dirham
	Currency_OMR Currency = 512 // Rial Omani
	Currency_NAD Currency = 516 // Namibia Dollar
	Currency_NPR Currency = 524 // Nepalese Rupee
	Currency_ANG Currency = 532 // Netherlands Antillean Guilder
	Currency_AWG Currency = 533 // Aruban Florin
	Currency_VUV Currency = 548 // Vatu
	Currency_NZD Currency = 554 // New Zealand Dollar
	Currency_NIO Currency = 558 // Cordoba Oro
	Currency_NGN Currency = 566 // Naira
	Currency_NOK Currency = 578 // Norwegian Krone
	Currency_PKR Currency = 586 // Pakistan Rupee
	Currency_PAB Currency = 590 // Balboa
	Currency_PGK Currency = 598 // Kina
	Currency_PYG Currency = 600 // Guarani
	Currency_PEN Currency = 604 // Sol
	Currency_PHP Currency = 608 // Philippine Peso
	Currency_QAR Currency = 634 // Qatari Rial
	Currency_RUB Currency = 643 // Russian Ruble
	Currency_RWF Currency = 646 // Rwanda Franc
	Currency_SHP Currency = 654 // Saint Helena Pound
	Currency_SAR Currency = 682 // Saudi Riyal
	Currency_SCR Currency = 690 // Seychelles Rupee
	Currency_SLL Currency = 694 // Leone
	Currency_SGD Currency = 702 // Singapore Dollar
	Currency_VND Currency = 704 // Dong
	Currency_SOS Currency = 706 // Somali Shilling
	Currency_ZAR Currency = 710 // Rand
	Currency_SSP Currency = 728 // South Sudanese Pound
	Currency_SZL Currency = 748 // Lilangeni
	Currency_SEK Currency = 752 // Swedish Krona
	Currency_CHF Currency = 756 // Swiss Franc
	Currency_SYP Currency = 760 // Syrian Pound
	Currency_THB Currency = 764 // Baht
	Currency_TOP Currency = 776 // Pa’anga
	Currency_TTD Currency = 780 // Trinidad and Tobago Dollar
	Currency_AED Currency = 784 // UAE Dirham
	Currency_TND Currency = 788 // Tunisian Dinar
	Currency_UGX Currency = 800 // Uganda Shilling
	Currency_MKD Currency = 807 // Denar
	Currency_EGP Currency = 818 // Egyptian Pound
	Currency_GBP Currency = 826 // Pound Sterling
	Currency_TZS Currency = 834 // Tanzanian Shilling
	Currency_USD Currency = 840 // US Dollar
	Currency_UYU Currency = 858 // Peso Uruguayo
	Currency_UZS Currency = 860 // Uzbekistan Sum
	Currency_WST Currency = 882 // Tala
	Currency_YER Currency = 886 // Yemeni Rial
	Currency_TWD Currency = 901 // New Taiwan Dollar
	Currency_UYW Currency = 927 // Unidad Previsional
	Currency_VES Currency = 928 // Bolívar Soberano
	Currency_MRU Currency = 929 // Ouguiya
	Currency_STN Currency = 930 // Dobra
	Currency_CUC Currency = 931 // Peso Convertible
	Currency_ZWL Currency = 932 // Zimbabwe Dollar
	Currency_BYN Currency = 933 // Belarusian Ruble
	Currency_TMT Currency = 934 // Turkmenistan New Manat
	Currency_GHS Currency = 936 // Ghana Cedi
	Currency_SDG Currency = 938 // Sudanese Pound
	Currency_UYI Currency = 940 // Uruguay Peso en Unidades Indexadas (UI)
	Currency_RSD Currency = 941 // Serbian Dinar
	Currency_MZN Currency = 943 // Mozambique Metical
	Currency_AZN Currency = 944 // Azerbaijan Manat
	Currency_RON Currency = 946 // Romanian Leu
	Currency_CHE Currency = 947 // WIR Euro
	Currency_CHW Currency = 948 // WIR Franc
	Currency_TRY Currency = 949 // Turkish Lira
	Currency_XAF Currency = 950 // CFA Franc BEAC
	Currency_XCD Currency = 951 // East Caribbean Dollar
	Currency_XOF Currency = 952 // CFA Franc BCEAO
	Currency_XPF Currency = 953 // CFP Franc
	Currency_XBA Currency = 955 // Bond Markets Unit European Composite Unit (EURCO)
	Currency_XBB Currency = 956 // Bond Markets Unit European Monetary Unit (E.M.U.-6)
	Currency_XBC Currency = 957 // Bond Markets Unit European Unit of Account 9 (E.U.A.-9)
	Currency_XBD Currency = 958 // Bond Markets Unit European Unit of Account 17 (E.U.A.-17)
	Currency_XAU Currency = 959 // Gold
	Currency_XDR Currency = 960 // SDR (Special Drawing Right)
	Currency_XAG Currency = 961 // Silver
	Currency_XPT Currency = 962 // Platinum
	Currency_XTS Currency = 963 // Codes specifically reserved for testing purposes
	Currency_XPD Currency = 964 // Palladium
	Currency_XUA Currency = 965 // ADB Unit of Account
	Currency_ZMW Currency = 967 // Zambian Kwacha
	Currency_SRD Currency = 968 // Surinam Dollar
	Currency_MGA Currency = 969 // Malagasy Ariary
	Currency_COU Currency = 970 // Unidad de Valor Real
	Currency_AFN Currency = 971 // Afghani
	Currency_TJS Currency = 972 // Somoni
	Currency_AOA Currency = 973 // Kwanza
	Currency_BGN Currency = 975 // Bulgarian Lev
	Currency_CDF Currency = 976 // Congolese Franc
	Currency_BAM Currency = 977 // Convertible Mark
	Currency_EUR Currency = 978 // Euro
	Currency_MXV Currency = 979 // Mexican Unidad de Inversion (UDI)
	Currency_UAH Currency = 980 // Hryvnia
	Currency_GEL Currency = 981 // Lari
	Currency_BOV Currency = 984 // Mvdol
	Currency_PLN Currency = 985 // Zloty
	Currency_BRL Currency = 986 // Brazilian Real
	Currency_CLF Currency = 990 // Unidad de Fomento
	Currency_XSU Currency = 994 // Sucre
	Currency_USN Currency = 997 // US Dollar (Next day)
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0:   "XXX",
		8:   "ALL",
		12:  "DZD",
		32:  "ARS",
		36:  "AUD",
		44:  "BSD",
		48:  "BHD",
		50:  "BDT",
		51:  "AMD",
		52:  "BBD",
		60:  "BMD",
		64:  "BTN",
		68:  "BOB",
		72:  "BWP",
		84:  "BZD",
		90:  "SBD",
		96:  "BND",
		104: "MMK",
		108: "BIF",
		116: "KHR",
		124: "CAD",
		132: "CVE",
		136: "KYD",
		144: "LKR",
		152: "CLP",
		156: "CNY",
		170: "COP",
		174: "KMF",
		188: "CRC",
		191: "HRK",
		192: "CUP",
		203: "CZK",
		208: "DKK",
		214: "DOP",
		222: "SVC",
		230: "ETB",
		232: "ERN",
		238: "FKP",
		242: "FJD",
		262: "DJF",
		270: "GMD",
		292: "GIP",
		320: "GTQ",
		324: "GNF",
		328: "GYD",
		332: "HTG",
		340: "HNL",
		344: "HKD",
		348: "HUF",
		352: "ISK",
		356: "INR",
		360: "IDR",
		364: "IRR",
		368: "IQD",
		376: "ILS",
		388: "JMD",
		392: "JPY",
		398: "KZT",
		400: "JOD",
		404: "KES",
		408: "KPW",
		410: "KRW",
		414: "KWD",
		417: "KGS",
		418: "LAK",
		422: "LBP",
		426: "LSL",
		430: "LRD",
		434: "LYD",
		446: "MOP",
		454: "MWK",
		458: "MYR",
		462: "MVR",
		480: "MUR",
		484: "MXN",
		496: "MNT",
		498: "MDL",
		504: "MAD",
		512: "OMR",
		516: "NAD",
		524: "NPR",
		532: "ANG",
		533: "AWG",
		548: "VUV",
		554: "NZD",
		558: "NIO",
		566: "NGN",
		578: "NOK",
		586: "PKR",
		590: "PAB",
		598: "PGK",
		600: "PYG",
		604: "PEN",
		608: "PHP",
		634: "QAR",
		643: "RUB",
		646: "RWF",
		654: "SHP",
		682: "SAR",
		690: "SCR",
		694: "SLL",
		702: "SGD",
		704: "VND",
		706: "SOS",
		710: "ZAR",
		728: "SSP",
		748: "SZL",
		752: "SEK",
		756: "CHF",
		760: "SYP",
		764: "THB",
		776: "TOP",
		780: "TTD",
		784: "AED",
		788: "TND",
		800: "UGX",
		807: "MKD",
		818: "EGP",
		826: "GBP",
		834: "TZS",
		840: "USD",
		858: "UYU",
		860: "UZS",
		882: "WST",
		886: "YER",
		901: "TWD",
		927: "UYW",
		928: "VES",
		929: "MRU",
		930: "STN",
		931: "CUC",
		932: "ZWL",
		933: "BYN",
		934: "TMT",
		936: "GHS",
		938: "SDG",
		940: "UYI",
		941: "RSD",
		943: "MZN",
		944: "AZN",
		946: "RON",
		947: "CHE",
		948: "CHW",
		949: "TRY",
		950: "XAF",
		951: "XCD",
		952: "XOF",
		953: "XPF",
		955: "XBA",
		956: "XBB",
		957: "XBC",
		958: "XBD",
		959: "XAU",
		960: "XDR",
		961: "XAG",
		962: "XPT",
		963: "XTS",
		964: "XPD",
		965: "XUA",
		967: "ZMW",
		968: "SRD",
		969: "MGA",
		970: "COU",
		971: "AFN",
		972: "TJS",
		973: "AOA",
		975: "BGN",
		976: "CDF",
		977: "BAM",
		978: "EUR",
		979: "MXV",
		980: "UAH",
		981: "GEL",
		984: "BOV",
		985: "PLN",
		986: "BRL",
		990: "CLF",
		994: "XSU",
		997: "USN",
	}
	Currency_value = map[string]int32{
		"XXX": 0,
		"ALL": 8,
		"DZD": 12,
		"ARS": 32,
		"AUD": 36,
		"BSD": 44,
		"BHD": 48,
		"BDT": 50,
		"AMD": 51,
		"BBD": 52,
		"BMD": 60,
		"BTN": 64,
		"BOB": 68,
		"BWP": 72,
		"BZD": 84,
		"SBD": 90,
		"BND": 96,
		"MMK": 104,
		"BIF": 108,
		"KHR": 116,
		"CAD": 124,
		"CVE": 132,
		"KYD": 136,
		"LKR": 144,
		"CLP": 152,
		"CNY": 156,
		"COP": 170,
		"KMF": 174,
		"CRC": 188,
		"HRK": 191,
		"CUP": 192,
		"CZK": 203,
		"DKK": 208,
		"DOP": 214,
		"SVC": 222,
		"ETB": 230,
		"ERN": 232,
		"FKP": 238,
		"FJD": 242,
		"DJF": 262,
		"GMD": 270,
		"GIP": 292,
		"GTQ": 320,
		"GNF": 324,
		"GYD": 328,
		"HTG": 332,
		"HNL": 340,
		"HKD": 344,
		"HUF": 348,
		"ISK": 352,
		"INR": 356,
		"IDR": 360,
		"IRR": 364,
		"IQD": 368,
		"ILS": 376,
		"JMD": 388,
		"JPY": 392,
		"KZT": 398,
		"JOD": 400,
		"KES": 404,
		"KPW": 408,
		"KRW": 410,
		"KWD": 414,
		"KGS": 417,
		"LAK": 418,
		"LBP": 422,
		"LSL": 426,
		"LRD": 430,
		"LYD": 434,
		"MOP": 446,
		"MWK": 454,
		"MYR": 458,
		"MVR": 462,
		"MUR": 480,
		"MXN": 484,
		"MNT": 496,
		"MDL": 498,
		"MAD": 504,
		"OMR": 512,
		"NAD": 516,
		"NPR": 524,
		"ANG": 532,
		"AWG": 533,
		"VUV": 548,
		"NZD": 554,
		"NIO": 558,
		"NGN": 566,
		"NOK": 578,
		"PKR": 586,
		"PAB": 590,
		"PGK": 598,
		"PYG": 600,
		"PEN": 604,
		"PHP": 608,
		"QAR": 634,
		"RUB": 643,
		"RWF": 646,
		"SHP": 654,
		"SAR": 682,
		"SCR": 690,
		"SLL": 694,
		"SGD": 702,
		"VND": 704,
		"SOS": 706,
		"ZAR": 710,
		"SSP": 728,
		"SZL": 748,
		"SEK": 752,
		"CHF": 756,
		"SYP": 760,
		"THB": 764,
		"TOP": 776,
		"TTD": 780,
		"AED": 784,
		"TND": 788,
		"UGX": 800,
		"MKD": 807,
		"EGP": 818,
		"GBP": 826,
		"TZS": 834,
		"USD": 840,
		"UYU": 858,
		"UZS": 860,
		"WST": 882,
		"YER": 886,
		"TWD": 901,
		"UYW": 927,
		"VES": 928,
		"MRU": 929,
		"STN": 930,
		"CUC": 931,
		"ZWL": 932,
		"BYN": 933,
		"TMT": 934,
		"GHS": 936,
		"SDG": 938,
		"UYI": 940,
		"RSD": 941,
		"MZN": 943,
		"AZN": 944,
		"RON": 946,
		"CHE": 947,
		"CHW": 948,
		"TRY": 949,
		"XAF": 950,
		"XCD": 951,
		"XOF": 952,
		"XPF": 953,
		"XBA": 955,
		"XBB": 956,
		"XBC": 957,
		"XBD": 958,
		"XAU": 959,
		"XDR": 960,
		"XAG": 961,
		"XPT": 962,
		"XTS": 963,
		"XPD": 964,
		"XUA": 965,
		"ZMW": 967,
		"SRD": 968,
		"MGA": 969,
		"COU": 970,
		"AFN": 971,
		"TJS": 972,
		"AOA": 973,
		"BGN": 975,
		"CDF": 976,
		"BAM": 977,
		"EUR": 978,
		"MXV": 979,
		"UAH": 980,
		"GEL": 981,
		"BOV": 984,
		"PLN": 985,
		"BRL": 986,
		"CLF": 990,
		"XSU": 994,
		"USN": 997,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_pgde_format_currency_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_pgde_format_currency_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_pgde_format_currency_proto_rawDescGZIP(), []int{0}
}

var File_pgde_format_currency_proto protoreflect.FileDescriptor

var file_pgde_format_currency_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x67, 0x64, 0x65, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x70, 0x67,
	0x64, 0x65, 0x2e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x14, 0x70, 0x67, 0x64, 0x65, 0x2f,
	0x7a, 0x65, 0x72, 0x6f, 0x2f, 0x7a, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a,
	0xfa, 0x0d, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x07, 0x0a, 0x03,
	0x58, 0x58, 0x58, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x08, 0x12, 0x07,
	0x0a, 0x03, 0x44, 0x5a, 0x44, 0x10, 0x0c, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x52, 0x53, 0x10, 0x20,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x55, 0x44, 0x10, 0x24, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x53, 0x44,
	0x10, 0x2c, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x48, 0x44, 0x10, 0x30, 0x12, 0x07, 0x0a, 0x03, 0x42,
	0x44, 0x54, 0x10, 0x32, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d, 0x44, 0x10, 0x33, 0x12, 0x07, 0x0a,
	0x03, 0x42, 0x42, 0x44, 0x10, 0x34, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4d, 0x44, 0x10, 0x3c, 0x12,
	0x07, 0x0a, 0x03, 0x42, 0x54, 0x4e, 0x10, 0x40, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x4f, 0x42, 0x10,
	0x44, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x57, 0x50, 0x10, 0x48, 0x12, 0x07, 0x0a, 0x03, 0x42, 0x5a,
	0x44, 0x10, 0x54, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x42, 0x44, 0x10, 0x5a, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x4e, 0x44, 0x10, 0x60, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x4d, 0x4b, 0x10, 0x68, 0x12, 0x07,
	0x0a, 0x03, 0x42, 0x49, 0x46, 0x10, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x4b, 0x48, 0x52, 0x10, 0x74,
	0x12, 0x07, 0x0a, 0x03, 0x43, 0x41, 0x44, 0x10, 0x7c, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x56, 0x45,
	0x10, 0x84, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x59, 0x44, 0x10, 0x88, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x4c, 0x4b, 0x52, 0x10, 0x90, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x4c, 0x50, 0x10, 0x98,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x4e, 0x59, 0x10, 0x9c, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x43,
	0x4f, 0x50, 0x10, 0xaa, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x4d, 0x46, 0x10, 0xae, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x43, 0x52, 0x43, 0x10, 0xbc, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x48, 0x52, 0x4b,
	0x10, 0xbf, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x55, 0x50, 0x10, 0xc0, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x43, 0x5a, 0x4b, 0x10, 0xcb, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x44, 0x4b, 0x4b, 0x10, 0xd0,
	0x01, 0x12, 0x08, 0x0a, 0x03, 0x44, 0x4f, 0x50, 0x10, 0xd6, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x56, 0x43, 0x10, 0xde, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x54, 0x42, 0x10, 0xe6, 0x01, 0x12,
	0x08, 0x0a, 0x03, 0x45, 0x52, 0x4e, 0x10, 0xe8, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x46, 0x4b, 0x50,
	0x10, 0xee, 0x01, 0x12, 0x08, 0x0a, 0x03, 0x46, 0x4a, 0x44, 0x10, 0xf2, 0x01, 0x12, 0x08, 0x0a,
	0x03, 0x44, 0x4a, 0x46, 0x10, 0x86, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x4d, 0x44, 0x10, 0x8e,
	0x02, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x49, 0x50, 0x10, 0xa4, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x47,
	0x54, 0x51, 0x10, 0xc0, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x4e, 0x46, 0x10, 0xc4, 0x02, 0x12,
	0x08, 0x0a, 0x03, 0x47, 0x59, 0x44, 0x10, 0xc8, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x48, 0x54, 0x47,
	0x10, 0xcc, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x48, 0x4e, 0x4c, 0x10, 0xd4, 0x02, 0x12, 0x08, 0x0a,
	0x03, 0x48, 0x4b, 0x44, 0x10, 0xd8, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x48, 0x55, 0x46, 0x10, 0xdc,
	0x02, 0x12, 0x08, 0x0a, 0x03, 0x49, 0x53, 0x4b, 0x10, 0xe0, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x49,
	0x4e, 0x52, 0x10, 0xe4, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x49, 0x44, 0x52, 0x10, 0xe8, 0x02, 0x12,
	0x08, 0x0a, 0x03, 0x49, 0x52, 0x52, 0x10, 0xec, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x49, 0x51, 0x44,
	0x10, 0xf0, 0x02, 0x12, 0x08, 0x0a, 0x03, 0x49, 0x4c, 0x53, 0x10, 0xf8, 0x02, 0x12, 0x08, 0x0a,
	0x03, 0x4a, 0x4d, 0x44, 0x10, 0x84, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4a, 0x50, 0x59, 0x10, 0x88,
	0x03, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x5a, 0x54, 0x10, 0x8e, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4a,
	0x4f, 0x44, 0x10, 0x90, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x45, 0x53, 0x10, 0x94, 0x03, 0x12,
	0x08, 0x0a, 0x03, 0x4b, 0x50, 0x57, 0x10, 0x98, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x52, 0x57,
	0x10, 0x9a, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4b, 0x57, 0x44, 0x10, 0x9e, 0x03, 0x12, 0x08, 0x0a,
	0x03, 0x4b, 0x47, 0x53, 0x10, 0xa1, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4c, 0x41, 0x4b, 0x10, 0xa2,
	0x03, 0x12, 0x08, 0x0a, 0x03, 0x4c, 0x42, 0x50, 0x10, 0xa6, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4c,
	0x53, 0x4c, 0x10, 0xaa, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4c, 0x52, 0x44, 0x10, 0xae, 0x03, 0x12,
	0x08, 0x0a, 0x03, 0x4c, 0x59, 0x44, 0x10, 0xb2, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4f, 0x50,
	0x10, 0xbe, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x57, 0x4b, 0x10, 0xc6, 0x03, 0x12, 0x08, 0x0a,
	0x03, 0x4d, 0x59, 0x52, 0x10, 0xca, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x56, 0x52, 0x10, 0xce,
	0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x55, 0x52, 0x10, 0xe0, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d,
	0x58, 0x4e, 0x10, 0xe4, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x4e, 0x54, 0x10, 0xf0, 0x03, 0x12,
	0x08, 0x0a, 0x03, 0x4d, 0x44, 0x4c, 0x10, 0xf2, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x41, 0x44,
	0x10, 0xf8, 0x03, 0x12, 0x08, 0x0a, 0x03, 0x4f, 0x4d, 0x52, 0x10, 0x80, 0x04, 0x12, 0x08, 0x0a,
	0x03, 0x4e, 0x41, 0x44, 0x10, 0x84, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x50, 0x52, 0x10, 0x8c,
	0x04, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x4e, 0x47, 0x10, 0x94, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x41,
	0x57, 0x47, 0x10, 0x95, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x55, 0x56, 0x10, 0xa4, 0x04, 0x12,
	0x08, 0x0a, 0x03, 0x4e, 0x5a, 0x44, 0x10, 0xaa, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x49, 0x4f,
	0x10, 0xae, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x4e, 0x47, 0x4e, 0x10, 0xb6, 0x04, 0x12, 0x08, 0x0a,
	0x03, 0x4e, 0x4f, 0x4b, 0x10, 0xc2, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x4b, 0x52, 0x10, 0xca,
	0x04, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x41, 0x42, 0x10, 0xce, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x50,
	0x47, 0x4b, 0x10, 0xd6, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x59, 0x47, 0x10, 0xd8, 0x04, 0x12,
	0x08, 0x0a, 0x03, 0x50, 0x45, 0x4e, 0x10, 0xdc, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x48, 0x50,
	0x10, 0xe0, 0x04, 0x12, 0x08, 0x0a, 0x03, 0x51, 0x41, 0x52, 0x10, 0xfa, 0x04, 0x12, 0x08, 0x0a,
	0x03, 0x52, 0x55, 0x42, 0x10, 0x83, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x52, 0x57, 0x46, 0x10, 0x86,
	0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x48, 0x50, 0x10, 0x8e, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x41, 0x52, 0x10, 0xaa, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x43, 0x52, 0x10, 0xb2, 0x05, 0x12,
	0x08, 0x0a, 0x03, 0x53, 0x4c, 0x4c, 0x10, 0xb6, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x47, 0x44,
	0x10, 0xbe, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x56, 0x4e, 0x44, 0x10, 0xc0, 0x05, 0x12, 0x08, 0x0a,
	0x03, 0x53, 0x4f, 0x53, 0x10, 0xc2, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x41, 0x52, 0x10, 0xc6,
	0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x53, 0x50, 0x10, 0xd8, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53,
	0x5a, 0x4c, 0x10, 0xec, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x45, 0x4b, 0x10, 0xf0, 0x05, 0x12,
	0x08, 0x0a, 0x03, 0x43, 0x48, 0x46, 0x10, 0xf4, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x59, 0x50,
	0x10, 0xf8, 0x05, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x48, 0x42, 0x10, 0xfc, 0x05, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x4f, 0x50, 0x10, 0x88, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x54, 0x44, 0x10, 0x8c,
	0x06, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x45, 0x44, 0x10, 0x90, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x54,
	0x4e, 0x44, 0x10, 0x94, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x47, 0x58, 0x10, 0xa0, 0x06, 0x12,
	0x08, 0x0a, 0x03, 0x4d, 0x4b, 0x44, 0x10, 0xa7, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x47, 0x50,
	0x10, 0xb2, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x42, 0x50, 0x10, 0xba, 0x06, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x5a, 0x53, 0x10, 0xc2, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x53, 0x44, 0x10, 0xc8,
	0x06, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59, 0x55, 0x10, 0xda, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x55,
	0x5a, 0x53, 0x10, 0xdc, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x57, 0x53, 0x54, 0x10, 0xf2, 0x06, 0x12,
	0x08, 0x0a, 0x03, 0x59, 0x45, 0x52, 0x10, 0xf6, 0x06, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x57, 0x44,
	0x10, 0x85, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59, 0x57, 0x10, 0x9f, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x56, 0x45, 0x53, 0x10, 0xa0, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x52, 0x55, 0x10, 0xa1,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x54, 0x4e, 0x10, 0xa2, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x43,
	0x55, 0x43, 0x10, 0xa3, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x5a, 0x57, 0x4c, 0x10, 0xa4, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x42, 0x59, 0x4e, 0x10, 0xa5, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x54, 0x4d, 0x54,
	0x10, 0xa6, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x47, 0x48, 0x53, 0x10, 0xa8, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x53, 0x44, 0x47, 0x10, 0xaa, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x59, 0x49, 0x10, 0xac,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x52, 0x53, 0x44, 0x10, 0xad, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x4d,
	0x5a, 0x4e, 0x10, 0xaf, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x5a, 0x4e, 0x10, 0xb0, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x52, 0x4f, 0x4e, 0x10, 0xb2, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x48, 0x45,
	0x10, 0xb3, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x48, 0x57, 0x10, 0xb4, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x54, 0x52, 0x59, 0x10, 0xb5, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x41, 0x46, 0x10, 0xb6,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x43, 0x44, 0x10, 0xb7, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58,
	0x4f, 0x46, 0x10, 0xb8, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x50, 0x46, 0x10, 0xb9, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x58, 0x42, 0x41, 0x10, 0xbb, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x42, 0x42,
	0x10, 0xbc, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x42, 0x43, 0x10, 0xbd, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x58, 0x42, 0x44, 0x10, 0xbe, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x41, 0x55, 0x10, 0xbf,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x44, 0x52, 0x10, 0xc0, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58,
	0x41, 0x47, 0x10, 0xc1, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x50, 0x54, 0x10, 0xc2, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x58, 0x54, 0x53, 0x10, 0xc3, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x50, 0x44,
	0x10, 0xc4, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x55, 0x41, 0x10, 0xc5, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x5a, 0x4d, 0x57, 0x10, 0xc7, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x53, 0x52, 0x44, 0x10, 0xc8,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x4d, 0x47, 0x41, 0x10, 0xc9, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x43,
	0x4f, 0x55, 0x10, 0xca, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x46, 0x4e, 0x10, 0xcb, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x54, 0x4a, 0x53, 0x10, 0xcc, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x41, 0x4f, 0x41,
	0x10, 0xcd, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x42, 0x47, 0x4e, 0x10, 0xcf, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x43, 0x44, 0x46, 0x10, 0xd0, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x42, 0x41, 0x4d, 0x10, 0xd1,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x45, 0x55, 0x52, 0x10, 0xd2, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x4d,
	0x58, 0x56, 0x10, 0xd3, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x55, 0x41, 0x48, 0x10, 0xd4, 0x07, 0x12,
	0x08, 0x0a, 0x03, 0x47, 0x45, 0x4c, 0x10, 0xd5, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x42, 0x4f, 0x56,
	0x10, 0xd8, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x50, 0x4c, 0x4e, 0x10, 0xd9, 0x07, 0x12, 0x08, 0x0a,
	0x03, 0x42, 0x52, 0x4c, 0x10, 0xda, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x43, 0x4c, 0x46, 0x10, 0xde,
	0x07, 0x12, 0x08, 0x0a, 0x03, 0x58, 0x53, 0x55, 0x10, 0xe2, 0x07, 0x12, 0x08, 0x0a, 0x03, 0x55,
	0x53, 0x4e, 0x10, 0xe5, 0x07, 0x1a, 0x05, 0xc8, 0xe4, 0xc0, 0x03, 0x01, 0x42, 0x3a, 0x5a, 0x38,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6d, 0x70, 0x69, 0x72,
	0x65, 0x66, 0x6f, 0x78, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x64, 0x61, 0x72, 0x74, 0x2d, 0x65, 0x78, 0x74, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x67, 0x64,
	0x65, 0x2f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pgde_format_currency_proto_rawDescOnce sync.Once
	file_pgde_format_currency_proto_rawDescData = file_pgde_format_currency_proto_rawDesc
)

func file_pgde_format_currency_proto_rawDescGZIP() []byte {
	file_pgde_format_currency_proto_rawDescOnce.Do(func() {
		file_pgde_format_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_pgde_format_currency_proto_rawDescData)
	})
	return file_pgde_format_currency_proto_rawDescData
}

var file_pgde_format_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_pgde_format_currency_proto_goTypes = []interface{}{
	(Currency)(0), // 0: pgde.format.Currency
}
var file_pgde_format_currency_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_pgde_format_currency_proto_init() }
func file_pgde_format_currency_proto_init() {
	if File_pgde_format_currency_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pgde_format_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pgde_format_currency_proto_goTypes,
		DependencyIndexes: file_pgde_format_currency_proto_depIdxs,
		EnumInfos:         file_pgde_format_currency_proto_enumTypes,
	}.Build()
	File_pgde_format_currency_proto = out.File
	file_pgde_format_currency_proto_rawDesc = nil
	file_pgde_format_currency_proto_goTypes = nil
	file_pgde_format_currency_proto_depIdxs = nil
}
